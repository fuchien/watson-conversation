{"version":3,"sources":["C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/$_gendir lazy","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.component.css","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.component.html","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.component.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.module.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/ballons/ballons.component.css","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/ballons/ballons.component.html","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/ballons/ballons.component.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.component.css","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.component.html","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.component.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.model.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/settings/toneAnalyzer/settings.component.tone.css","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/settings/toneAnalyzer/settings.component.tone.html","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/settings/toneAnalyzer/settings.component.tone.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/error-user/error-user.component.css","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/error-user/error-user.component.html","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/error-user/error-user.component.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/login/login.component.css","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/login/login.component.html","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/login/login.component.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/guards/auth.guards.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/services/ConversationService/conversation.service.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/services/ToneService/tone.service.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/services/UserService/user.service.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/environments/environment.ts","C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- <app-chat></app-chat> -->\\r\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport {\n  MdNativeDateModule,\n  MdCardModule,\n  MdCheckboxModule,\n  MdSelectModule,\n  MdProgressBarModule,\n  MdProgressSpinnerModule,\n  MdDatepickerModule,\n  MdToolbarModule,\n  MdTabsModule,\n  MdDialogModule,\n  MdSlideToggleModule,\n  MdExpansionModule,\n  MdIconModule,\n  MdButtonModule,\n  MdInputModule,\n  MdMenuModule } from '@angular/material'\n  import 'hammerjs'\n  \n  import { AppComponent } from './app.component';\n  import { ChatComponent } from './components/chat/chat.component';\n  import { BallonsComponent } from './components/ballons/ballons.component';\n  import { SettingsToneComponent } from './components/chat/settings/toneAnalyzer/settings.component.tone';\n  import { LoginComponent } from './components/login/login.component';\n  import { ErrorUserComponent } from './components/error-user/error-user.component';\n  \n  import { UserService } from './services/UserService/user.service';\n  import { ConversationService } from './services/ConversationService/conversation.service';\n  import { ToneService } from './services/ToneService/tone.service';\n  import { AuthGuard } from './guards/auth.guards';\n  \n  const appRoutes: Routes = [\n    {\n      path: '',\n      redirectTo: 'login',\n      pathMatch: 'full'\n    },\n    {\n      path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'chat',\n        component: ChatComponent,\n        canActivate: [AuthGuard]\n    }\n  ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    BallonsComponent,\n    LoginComponent,\n    ErrorUserComponent,\n    SettingsToneComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MdNativeDateModule,\n    MdCardModule,\n    MdCheckboxModule,\n    MdSlideToggleModule,\n    MdIconModule,\n    MdDialogModule,\n    MdProgressSpinnerModule,\n    MdTabsModule,\n    MdProgressBarModule,\n    MdSelectModule,\n    MdExpansionModule,\n    MdDatepickerModule,\n    MdToolbarModule,\n    MdButtonModule,\n    MdInputModule,\n    MdMenuModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  entryComponents: [\n    BallonsComponent,\n    ErrorUserComponent\n],\n  providers: [\n    ConversationService,\n    AuthGuard,\n    UserService,\n    ToneService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".divBallon {\\r\\n    min-width: 20%;\\r\\n    max-width: 60%;\\r\\n    border-radius: 1rem;\\r\\n    margin: 1vh auto;\\r\\n    padding: .4rem;\\r\\n    -webkit-user-select: text;\\r\\n       -moz-user-select: text;\\r\\n        -ms-user-select: text;\\r\\n            user-select: text;\\r\\n    cursor: text;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n    width: 5%;\\r\\n}\\r\\n\\r\\n.ballon {\\r\\n    width: 92%;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.ballonLeft {\\r\\n    float: left;\\r\\n    background-color: #00b0ff;\\r\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, .05);\\r\\n    border-top-left-radius: 0;\\r\\n    color: #fff;\\r\\n    margin-left: 8vw;\\r\\n}\\r\\n\\r\\n.ballonRight {\\r\\n    float: right;\\r\\n    background-color: #eceff1;\\r\\n    box-shadow: 0 1px 1px rgba(97, 18, 18, 0.5);\\r\\n    border-top-right-radius: 0;\\r\\n    word-wrap: break-word;\\r\\n    margin-right: 5vw;\\r\\n}\\r\\n\\r\\n.imgWatson {\\r\\n    border-radius: 5px;\\r\\n    width: 3rem;\\r\\n    height: 2rem;\\r\\n    margin-top: 1.5vh;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n\\r\\n    .divBallon {\\r\\n        border-radius: 2rem;\\r\\n        margin: 2vh auto;\\r\\n        padding: .5rem;\\r\\n    }\\r\\n\\r\\n    .logo {\\r\\n        padding-right: 0;\\r\\n    }\\r\\n\\r\\n    .imgWatson {\\r\\n        width: 4rem;\\r\\n        height: 3rem;\\r\\n    }\\r\\n\\r\\n    .ballon {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    .ballonLeft {\\r\\n        border-top-left-radius: 0;\\r\\n        margin-left: 0;\\r\\n    }\\r\\n\\r\\n    .ballonRight {\\r\\n        border-top-right-radius: 0;\\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/ballons/ballons.component.css\n// module id = ../../../../../src/app/components/ballons/ballons.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-1 col-sm-1 logo\\\">\\n      <div *ngIf=\\\"isSara\\\">\\n          <img class=\\\"imgWatson\\\" src=\\\"./assets/img/watson-logo.png\\\" />\\n      </div>\\n  </div>\\n  <div class=\\\"col-md-10 col-sm-10 ballon\\\">\\n      <div [ngClass]=\\\"getBallowClass()\\\">\\n          <div #divContentBallon></div>\\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/ballons/ballons.component.html\n// module id = ../../../../../src/app/components/ballons/ballons.component.html\n// module chunks = main","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  Output,\n  OnInit,\n  EventEmitter\n} from \"@angular/core\";\n\n@Component({\n  selector: 'app-ballons',\n  templateUrl: './ballons.component.html',\n  styleUrls: ['./ballons.component.css']\n})\nexport class BallonsComponent implements OnInit {\n\n  @ViewChild('divContentBallon') divContentBallon: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  //Variáveis de propriedades\n  private elementSideValue: string;\n  \n  //Variáveis de controle da interface\n  private isSara: boolean;\n\n  //Propriedade para informar se o balão deve ficar a direita ou a esquerda do diálogo\n  set setIsLeft(value: boolean) {\n      this.elementSideValue = (value == false ? \"RIGHT\" : \"LEFT\");\n      this.isSara = value;\n  }\n\n  //Informa pela propriedade o valor a ser exibido no balão\n  set setMessage(value: string) {\n      this.divContentBallon.nativeElement.innerHTML = value;\n  }  \n\n  //Função responsável por verificar se aplicará o css do balão de diálogo\n  //do Watson (lado esquerdo) ou do usuário logado (lado direito)\n  getBallowClass() {\n      if (this.elementSideValue == undefined ||\n          this.elementSideValue == null ||\n          this.elementSideValue == \"LEFT\") {\n          return \"divBallon ballonLeft\";\n      }\n\n      return \"divBallon ballonRight\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/ballons/ballons.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chat {\\r\\n    min-width: 95vw;\\r\\n    min-height: 85vh;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.form {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-flow: column;\\r\\n            flex-flow: column;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n\\r\\n.panelChat {\\r\\n    margin-top: 5vh;\\r\\n    min-height: 70vh;\\r\\n    border: 1px solid rgba(30,30,120,.7);\\r\\n    border-radius: 5px;\\r\\n    max-height: 70vh;\\r\\n    overflow-y: auto;\\r\\n    overflow-x: hidden;\\r\\n    min-width: 95vw;\\r\\n}\\r\\n\\r\\n.panelChat::-webkit-scrollbar-track {\\r\\n    background-color: #1A94C4;\\r\\n}\\r\\n\\r\\n.panelChat::-webkit-scrollbar {\\r\\n    width: 6px;\\r\\n    background: #1A94C4;\\r\\n}\\r\\n\\r\\n.panelChat::-webkit-scrollbar-thumb {\\r\\n    background: rgba(11, 237, 114, .8);\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n    min-width: 95vw;\\r\\n    width: 95vw;\\r\\n    min-height: 10vh;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.settings {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    max-width: 90vw;\\r\\n    min-width: 90vw;\\r\\n    height: auto;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-flow: column;\\r\\n            flex-flow: column;\\r\\n    margin: 4vh auto;\\r\\n}\\r\\n\\r\\n.panel {\\r\\n    margin: 2vh auto;\\r\\n}\\r\\n\\r\\n@media (min-width: 1024px) {\\r\\n    \\r\\n    .chat {\\r\\n        min-width: 80vw;\\r\\n    }\\r\\n\\r\\n    .form {\\r\\n        min-width: 80vw;\\r\\n    }\\r\\n\\r\\n    .panelChat {\\r\\n        min-width: 80vw;\\r\\n    }\\r\\n\\r\\n    .example-form {\\r\\n        min-width: 80vw;\\r\\n        width: 80vw;\\r\\n    }\\r\\n\\r\\n    .settings {\\r\\n        max-width: 80vw;\\r\\n        min-width: 80vw;\\r\\n        -webkit-box-orient: horizontal;\\r\\n        -webkit-box-direction: normal;\\r\\n            -ms-flex-flow: row wrap;\\r\\n                flex-flow: row wrap;\\r\\n        -webkit-box-pack: center;\\r\\n            -ms-flex-pack: center;\\r\\n                justify-content: center;\\r\\n    }\\r\\n\\r\\n    .panel {\\r\\n        max-width: 35vw;\\r\\n        margin: 1vh auto;\\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.component.css\n// module id = ../../../../../src/app/components/chat/chat.component.css\n// module chunks = main","module.exports = \"<md-tab-group>\\n  <md-tab label=\\\"Settings\\\" *ngIf=\\\"isAdmin\\\">\\n    <div class=\\\"settings\\\">\\n      <div class=\\\"panel\\\">\\n        <app-settings-tone></app-settings-tone>\\n      </div>\\n\\n      <div class=\\\"panel\\\">\\n        <app-settings-tone></app-settings-tone>\\n      </div>\\n    </div>\\n  </md-tab>\\n  <md-tab label=\\\"Chat\\\">\\n    <div class=\\\"chat\\\">\\n      <div class=\\\"form\\\">\\n        <div id=\\\"divOverflow\\\" class=\\\"panel-body panelChat\\\">\\n          <div #divBallons></div>\\n        </div>\\n    \\n        <form class=\\\"example-form\\\">\\n          <md-form-field class=\\\"example-full-width\\\">\\n            <input mdInput #message maxlength=\\\"50\\\" autofocus [(ngModel)]=\\\"dialogMessage\\\" class=\\\"form-control\\\"\\n            name=\\\"message\\\" placeholder=\\\"Message\\\" (keypress)=\\\"eventKeyHandler($event, message.value)\\\">\\n            <md-hint align=\\\"start\\\"><strong>Tecle ENTER para enviar a mensagem</strong> </md-hint>\\n            <md-hint align=\\\"end\\\">{{message.value.length}} / 50</md-hint>\\n          </md-form-field>\\n        </form>\\n      </div>\\n    </div>\\n  </md-tab>\\n</md-tab-group>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.component.html\n// module id = ../../../../../src/app/components/chat/chat.component.html\n// module chunks = main","import { Component, OnInit,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\nimport { ConversationService } from './../../services/ConversationService/conversation.service';\nimport { BallonsComponent } from './../ballons/ballons.component';\nimport { ChatModel } from \"./chat.model\"\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  @ViewChild('divBallons', { read: ViewContainerRef }) divBallons;\n\n  private dialogMessage: string = ''\n  private isAdmin: boolean = false\n\n  constructor(\n    private conversationService: ConversationService,\n    private cdr: ChangeDetectorRef,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    \n  }\n\n  ngOnInit() {\n    \n    if (ConversationService.getLogin().admin === '1')\n      this.isAdmin = true\n\n    let chatData = new ChatModel()\n    chatData.setContext = {}\n    chatData.setText = ''\n    this.conversationService.sendMessage(chatData)\n      .subscribe(res => {\n        let msg = res.output.text\n        const factory = this.componentFactoryResolver.resolveComponentFactory(BallonsComponent);\n        \n        //Insere a mensagem do usuário no balão\n        var ref = this.divBallons.createComponent(factory);\n        ref.instance.setIsLeft = true;\n        ref.instance.setMessage = msg;\n        ref.changeDetectorRef.detectChanges();\n      })\n  }\n\n  private eventKeyHandler(event, inputValue): void {\n\n      if (event.keyCode == 13) {\n\n          //Chama a função responsável por tratar as mensagens enviadas\n          this.sendMsg(inputValue);\n      }\n  }\n\n  sendMsg(msg) {\n\n    let chatData = new ChatModel()\n    chatData.setText = msg\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(BallonsComponent);\n    \n    //Insere a mensagem do usuário no balão\n    var ref = this.divBallons.createComponent(factory);\n    ref.instance.setIsLeft = false;\n    ref.instance.setMessage = msg;\n    ref.changeDetectorRef.detectChanges();\n\n    this.conversationService.sendMessage(chatData)\n      .subscribe(res => {\n        let msg = res.output.text\n        const factory = this.componentFactoryResolver.resolveComponentFactory(BallonsComponent);\n        \n        //Insere a mensagem do usuário no balão\n        var ref = this.divBallons.createComponent(factory);\n        ref.instance.setIsLeft = true;\n        ref.instance.setMessage = msg;\n        ref.changeDetectorRef.detectChanges();\n        this.updateScrollBar()\n      })\n    this.dialogMessage = null\n    this.updateScrollBar()\n  }\n\n  //Função responsável por colocar a barra de rolagem exibindo a última mensagem\n  private updateScrollBar(): void {\n    //Deixa a div posicionada com a barra de rolagem em baixo\n    if (document.querySelector(\"#divOverflow\") != undefined) {\n        document.querySelector(\"#divOverflow\").scrollTop = document.querySelector(\"#divOverflow\").scrollHeight;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.component.ts","import {Injectable} from \"@angular/core\"\r\n\r\n@Injectable()\r\nexport class ChatModel {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    private text : string;\r\n    private context : object;\r\n\r\n    //Define qual o valor do texto a ser enviado para o Conversation\r\n    set setText(text : string) {\r\n        this.text = text;\r\n    }\r\n\r\n    //Define o objeto de contexto do Conversation\r\n    set setContext(context : object) {\r\n        this.context = context;\r\n    }\r\n\r\n    //Obtém o valor definido a ser enviado para o Conversation\r\n    get getText() : string {\r\n        return this.text;\r\n    }\r\n\r\n    //Obtém o objeto de contexto definido para ser enviado ao Conversation\r\n    get getContext() : object {\r\n        return this.context;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/chat.model.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".action {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: justify;\\r\\n        -ms-flex-pack: justify;\\r\\n            justify-content: space-between;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.spinner {\\r\\n    max-height: 5vh;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/settings/toneAnalyzer/settings.component.tone.css\n// module id = ../../../../../src/app/components/chat/settings/toneAnalyzer/settings.component.tone.css\n// module chunks = main","module.exports = \"<md-expansion-panel>\\n  <md-expansion-panel-header>\\n    <md-panel-title>\\n      Tone Analyzer\\n    </md-panel-title>\\n    <md-panel-description>\\n      Coloque os seus credenciais\\n    </md-panel-description>\\n  </md-expansion-panel-header>\\n  \\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"enviarCredenciais(myForm.value, myForm.valid)\\\">\\n    <md-form-field>\\n      <input mdInput placeholder=\\\"username\\\" formControlName=\\\"username\\\" \\n      class=\\\"form-control\\\" >\\n      <md-error *ngIf=\\\"myForm.controls.username.invalid\\\">\\n        username é <strong>obrigatório</strong>\\n      </md-error>\\n    </md-form-field>\\n    \\n    <md-form-field>\\n      <input mdInput placeholder=\\\"password\\\" formControlName=\\\"password\\\" \\n      class=\\\"form-control\\\" >\\n      <md-error *ngIf=\\\"myForm.controls.password.invalid\\\">\\n        password é <strong>obrigatório</strong>\\n      </md-error>\\n    </md-form-field>\\n\\n    <md-action-row class=\\\"action\\\">\\n      <!-- <md-checkbox>Salvar</md-checkbox> -->\\n      <md-slide-toggle color=\\\"primary\\\" (click)=\\\"saveOrNot()\\\">{{ isSave ? 'Save!' : 'Not save' }}</md-slide-toggle>\\n      <button md-button color=\\\"primary\\\" *ngIf=\\\"!enviando\\\">ENVIAR</button>\\n      <md-spinner class=\\\"spinner\\\" *ngIf=\\\"enviando\\\"></md-spinner>\\n    </md-action-row>\\n  </form>\\n</md-expansion-panel>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/settings/toneAnalyzer/settings.component.tone.html\n// module id = ../../../../../src/app/components/chat/settings/toneAnalyzer/settings.component.tone.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\nimport { ToneService } from './../../../../services/ToneService/tone.service';\n\n@Component({\n  selector: 'app-settings-tone',\n  templateUrl: './settings.component.tone.html',\n  styleUrls: ['./settings.component.tone.css']\n})\nexport class SettingsToneComponent implements OnInit {\n\n  private myForm: FormGroup\n\n  private username: string = ''\n  private password: string = ''\n  private isSave: boolean = false\n  private enviando: boolean = false\n\n  constructor(\n    private fb: FormBuilder,\n    private toneService: ToneService\n  ) {\n    this.myForm = fb.group({\n      'username': [null, Validators.required],\n      'password': [null, Validators.required]\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  saveOrNot() {\n    this.isSave = !this.isSave\n  }\n\n  enviarCredenciais(post, isValid: boolean) {\n    \n    if (isValid) {\n\n      this.enviando = true\n\n      this.username = post.username\n      this.password = post.password\n      let credenciais = {\n        username: this.username,\n        password: this.password\n      }\n\n      this.toneService.enviarCredenciais(credenciais)\n        .subscribe(res => console.log(res))\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/chat/settings/toneAnalyzer/settings.component.tone.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/error-user/error-user.component.css\n// module id = ../../../../../src/app/components/error-user/error-user.component.css\n// module chunks = main","module.exports = \"<div>\\n  <md-dialog-content>\\n    <strong>{{_injectedValue}}</strong>\\n  </md-dialog-content>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/error-user/error-user.component.html\n// module id = ../../../../../src/app/components/error-user/error-user.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {MdDialogRef, MD_DIALOG_DATA} from '@angular/material';\n\n@Component({\n  selector: 'app-error-user',\n  templateUrl: './error-user.component.html',\n  styleUrls: ['./error-user.component.css'],\n  // providers: [\n  //   {provide: MD_DIALOG_DATA, useValue: {} },\n  //   {provide: MdDialogRef, useValue: {} }\n  // ]\n})\nexport class ErrorUserComponent implements OnInit {\n\n  private _injectedValue: any = 'Usuário não existe!';\n\n  constructor(\n    public thisDialogRef: MdDialogRef<ErrorUserComponent>,\n    @Inject(MD_DIALOG_DATA) private data: any\n  ) {\n    if(this.data) {\n      this._injectedValue = this.data;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.thisDialogRef.close();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/error-user/error-user.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chat {\\r\\n    min-width: 100vw;\\r\\n    min-height: 85vh;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-flow: column;\\r\\n            flex-flow: column;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.progress {\\r\\n    min-width: 90vw;\\r\\n    max-width: 90vw;\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    min-width: 90%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.form {\\r\\n    width: 100%;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n\\r\\n    .chat {\\r\\n        min-width: 80vw;\\r\\n    }\\r\\n\\r\\n    .progress {\\r\\n        min-width: 40vw;\\r\\n        max-width: 40vw;\\r\\n    }\\r\\n\\r\\n    .example-full-width {\\r\\n        width: 40%;\\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<md-toolbar color=\\\"primary\\\">\\n  <span>Bluehack</span>\\n</md-toolbar>\\n\\n<div class=\\\"chat\\\">\\n  <div class=\\\"example-form\\\" *ngIf=\\\"!inProgress\\\">\\n    <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"enviarDados(myForm.value, myForm.valid)\\\" class=\\\"form\\\">\\n      <md-form-field class=\\\"example-full-width\\\">\\n        <input mdInput #cpf autofocus formControlName=\\\"cpf\\\" \\n        class=\\\"form-control\\\"\\n        placeholder=\\\"Digite o seu CPF '000.000.000-00'\\\" >\\n        <md-icon mdSuffix>mode_edit</md-icon>\\n        <md-error *ngIf=\\\"myForm.controls.cpf.invalid\\\">\\n          CPF é <strong>obrigatório</strong> no formato '000.000.000-00'\\n        </md-error>\\n      </md-form-field>\\n    </form>\\n  </div>\\n  <div class=\\\"progress\\\">\\n    <md-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"inProgress\\\"></md-progress-bar>\\n  </div>\\n</div>\\n<!-- (keypress)=\\\"eventKeyHandler($event, login.value)\\\" -->\\n<!-- *ngIf=\\\"loginFormControl.hasError('required')\\\" -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MdDialog} from '@angular/material';\n\nimport { UserService } from './../../services/UserService/user.service';\nimport { ConversationService } from './../../services/ConversationService/conversation.service';\n\nimport { ErrorUserComponent } from '../error-user/error-user.component';\n\nconst CPF_REGEX = /^([0-9]){3}\\.([0-9]){3}\\.([0-9]){3}-([0-9]){2}$/;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private inProgress: boolean = false\n  private cpf: string = ''\n  private myForm: FormGroup\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    public dialog: MdDialog,\n    private fb: FormBuilder\n  ) {\n    this.myForm = fb.group({\n      'cpf': [null, Validators.pattern(CPF_REGEX)]\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  openDialog(msg: string): void {\n    let dialogRef = this.dialog.open(ErrorUserComponent, {\n      width: 'auto',\n      data: msg\n    });\n  }\n\n  enviarDados(post, isValid: boolean) {\n\n    if (isValid) {\n\n      this.cpf = post.cpf\n      this.inProgress = true\n\n      this.userService.user(this.cpf)\n        .subscribe(res => {\n            ConversationService.setLogin(res)\n            this.router.navigate(['/chat'])\n          }, err => {\n            this.inProgress = false\n            this.openDialog(err.json().msg)\n          })\n\n      // this.userService.findUser(this.login)\n      //   .subscribe(res => {\n      //     ConversationService.setLogin(res)\n      //     this.router.navigate(['/chat'])\n      //   }, err => {\n      //     this.inProgress = false\n      //     this.openDialog(err.json().msg)\n      //   })\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/components/login/login.component.ts","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport { ConversationService } from './../services/ConversationService/conversation.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private router : Router\r\n    ) {\r\n\r\n    }\r\n\r\n    canActivate() : boolean {\r\n        let login = ConversationService.getLogin();\r\n        if (login !== null) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/guards/auth.guards.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers, Response} from '@angular/http';\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/map'\nimport { ChatModel } from \"../../components/chat/chat.model\"\n\n@Injectable()\nexport class ConversationService {\n\n  private url: string = `http://localhost:3004/conversation`\n  // private url: string = `/conversation`\n  private context: any = {}\n  private static login: any = null\n\n  constructor(\n    private _http: Http\n  ) {\n    \n  }\n\n  static setLogin(login: object) {\n    this.login = login\n  }\n\n  static getLogin(): any {\n    return this.login\n  }\n\n  sendMessage(content: ChatModel) {\n\n    content.setContext = this.context;\n    // let body = JSON.stringify(data)\n    let body = JSON.stringify({\n      input: {\n        text: content.getText\n      },\n      context: content.getContext,\n      login: ConversationService.getLogin()\n    })\n    let headers = new Headers({'Content-type': 'application/json'})\n    return this._http.post(this.url, body, {headers: headers})\n      .map((res: Response) => {\n        this.context = res.json().context\n        return res.json()\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/services/ConversationService/conversation.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers, Response} from '@angular/http';\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class ToneService {\n\n  private url: string = `http://localhost:3004/apiswatson/tone`\n  // private url: string = `/apiswatson/tone`\n\n  constructor(\n    private _http: Http\n  ) { }\n\n  enviarCredenciais(credenciais) {\n    \n    let body = JSON.stringify({\n      username: credenciais.username,\n      password: credenciais.password,\n      text: 'Estou muito feliz'\n    })\n    let headers = new Headers({'Content-type': 'application/json'})\n    return this._http.post(this.url, body, {headers: headers})\n      .map((res: Response) => {\n        return res.json()\n      })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/services/ToneService/tone.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers, Response} from '@angular/http';\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class UserService {\n\n  private url: string = `http://localhost:3004/users`\n  // private url: string = `/users`\n\n  constructor(\n    private _http: Http\n  ) { }\n\n  user(cpf) {\n\n    return this._http.get(this.url + `/${cpf}`)\n      .map((res: Response) => res.json())\n  }\n\n  findUser(login) {\n\n    let body = JSON.stringify({\n      login: login,\n      // nome: 'Eduardo',\n      // cpf: '444.444.444-44',\n      // descricao: 'Estagiario',\n      // admin: '1'\n    })\n    let headers = new Headers({'Content-type': 'application/json'})\n    return this._http.post(this.url, body, {headers: headers})\n      .map((res: Response) => {\n        return res.json()\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/app/services/UserService/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/HsuFuChien/Documents/IBM/Chatbot/watson-conversation/angular4/src/main.ts"],"sourceRoot":"webpack:///"}